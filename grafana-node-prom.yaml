version: '3.8'

volumes:
  prometheus_data_linux: {}
  prometheus_data_windows: {}

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    environment:
      TZ: "Asia/Seoul"

    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    environment:
      TZ: "Asia/Seoul"

    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data_linux:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"

  prometheus_windows:
    image: prom/prometheus:latest
    container_name: prometheus_windows
    restart: unless-stopped
    environment:
      TZ: "Asia/Seoul"

    volumes:
      - ./prometheus_windows.yml:/etc/prometheus/prometheus.yml
      - prometheus_data_windows:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9091:9090"


  grafana:
    volumes:
      - /docker-compose/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - TZ: "Asia/Seoul"
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: prometheus
          type: prometheus
          access: proxy 
          orgId: 1
          url: http://prometheus:9090
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        - name: prometheus_windows
          type: prometheus
          access: proxy 
          orgId: 1
          url: http://prometheus_windows:9091
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
        EOF
        cat <<EOF > /etc/grafana/provisioning/dashboards/dashboard.yml
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /etc/grafana/provisioning/dashboards
        dashboards:
          default:
            DataBoxFrame_linux:
               gnetId: 1860
               datasource: prometheus
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
  fluentd:
    build:
      context: /docker-compose/fluentd
      dockerfile: Dockerfile
    environment:
      TZ: "Asia/Seoul"
    volumes:
            - /docker-compose/fluentd/fluent.conf:/fluentd/etc/fluent.conf
            - /var/log:/var/log
    ports:
      - "24224:24224"
